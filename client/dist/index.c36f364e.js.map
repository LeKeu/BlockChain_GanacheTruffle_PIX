{"mappings":"AAAA,SAAS,gBAAgB,CAAC,oBAAoB;IAC1C,kDAAkD;IAClD,SAAS,cAAc,CAAC,eAAe,gBAAgB,CAAC,UAAU,eAAe,KAAK;QAClF,MAAM,cAAc,IAAI,gCAAgC;QAExD,8BAA8B;QAC9B,MAAM,OAAO,SAAS,cAAc,CAAC,QAAQ,KAAK,CAAC,IAAI;QACvD,MAAM,KAAK,SAAS,cAAc,CAAC,MAAM,KAAK,CAAC,IAAI;QACnD,MAAM,SAAS,SAAS,cAAc,CAAC,UAAU,KAAK,CAAC,IAAI;QAE3D,kDAAkD;QAClD,MAAM,YAAY,MAAM,IAAI;IAChC;AACJ;AAEA,+DAA+D;AAC/D,eAAe,YAAY,IAAI,EAAE,EAAE,EAAE,MAAM;IACvC,4DAA4D;IAC5D,MAAM,YAAY,KAAK,KAAK,CAAC,KAAK,CAAC,QAAQ;IAE3C,IAAI;QACA,yCAAyC;QACzC,MAAM,WAAW,MAAM,OAAO,QAAQ,CAAC,OAAO,CAAC;YAAE,QAAQ;QAAsB;QAC/E,MAAM,cAAc,QAAQ,CAAC,EAAE;QAE/B,uCAAuC;QACvC,MAAM,WAAW,IAAI,KAAK,GAAG,CAAC,QAAQ,CAAC,aAAa,iBAAiB;YAAE,MAAM;QAAY;QAEzF,yCAAyC;QACzC,MAAM,SAAS,MAAM,SAAS,OAAO,CAAC,WAAW,CAAC,IAAI,WAAW,IAAI;QAErE,gCAAgC;QAChC,SAAS,cAAc,CAAC,UAAU,SAAS,GAAG,CAAC,oCAAoC,EAAE,OAAO,eAAe,CAAC,IAAI,CAAC;IACrH,EAAE,OAAO,OAAO;QACZ,8CAA8C;QAC9C,SAAS,cAAc,CAAC,UAAU,SAAS,GAAG,CAAC,UAAU,EAAE,MAAM,OAAO,CAAC,IAAI,CAAC;IAClF;AACJ","sources":["index.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', async function() {\r\n    // Adiciona um ouvinte de evento para o formulário\r\n    document.getElementById('paymentForm').addEventListener('submit', async function(event) {\r\n        event.preventDefault(); // Previne o envio do formulário\r\n\r\n        // Obtém os valores dos inputs\r\n        const from = document.getElementById('from').value.trim();\r\n        const to = document.getElementById('to').value.trim();\r\n        const amount = document.getElementById('amount').value.trim();\r\n\r\n        // Chama a função sendPayment do contrato Solidity\r\n        await sendPayment(from, to, amount);\r\n    });\r\n});\r\n\r\n// Função para chamar a função sendPayment do contrato Solidity\r\nasync function sendPayment(from, to, amount) {\r\n    // Converte o valor do amount para Wei (1 ether = 10^18 Wei)\r\n    const amountWei = web3.utils.toWei(amount, 'ether');\r\n\r\n    try {\r\n        // Solicita uma conta Ethereum ao usuário\r\n        const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n        const fromAccount = accounts[0];\r\n\r\n        // Define o contrato e a conta de envio\r\n        const contract = new web3.eth.Contract(contractAbi, contractAddress, { from: fromAccount });\r\n\r\n        // Chama a função sendPayment do contrato\r\n        const result = await contract.methods.sendPayment(to, amountWei).send();\r\n\r\n        // Exibe uma mensagem de sucesso\r\n        document.getElementById('status').innerHTML = `<p>Transaction successful. Tx Hash: ${result.transactionHash}</p>`;\r\n    } catch (error) {\r\n        // Em caso de erro, exibe uma mensagem de erro\r\n        document.getElementById('status').innerHTML = `<p>Error: ${error.message}</p>`;\r\n    }\r\n}\r\n"],"names":[],"version":3,"file":"index.c36f364e.js.map","sourceRoot":"/__parcel_source_root/"}